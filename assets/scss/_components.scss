@use 'variables' as *;
@use 'sass:color';

// Mixin para transiciones (lo necesitas definir en _variables.scss)
@mixin transition($args...) {
  transition: $args;
}

// Placeholder común para botones
%btn-style {
  display: inline-block;
  padding: .75rem 1.5rem;
  font-size: 1rem;
  text-align: center;
  text-decoration: none;
  border-radius: .25rem;
  font-weight: bold;
  cursor: pointer;
}

// Clase base para botón
.btn {
  @extend %btn-style;
  background: $primary-color;
  color: white;
  text-decoration: none;
  @include transition(all 0.3s ease);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);

  &:hover {
    background: color.adjust($primary-color, $lightness: -10%);
    transform: translateY(-2px);
    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);
  }
.btn-primary {
  background: $primary-color;
  color: white;
}
}

// Tamaños dinámicos para botones
@each $size in small, medium, large {
  .btn-#{$size} {
    @if $size == small {
      padding: .5rem 1rem;
    } @else if $size == medium {
      padding: .75rem 1.25rem;
    } @else {
      padding: 1rem 1.5rem;
    }
  }
}

.features {
  display: grid;
  grid-template-columns: 1fr;
  gap: 2rem;
  margin: 3rem 0;

  @media (min-width: 768px) {
    grid-template-columns: repeat(2, 1fr);
    padding: 0 3rem;
  }

  .feature {
    background-color: color.adjust($primary-color, $lightness: 35%);
    padding: 2rem;
    border-radius: 0.75rem;
    min-height: 250px;

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;

    h3 {
      margin-bottom: 1rem;
      font-size: 1.5rem;
      color: $secondary-color;
    }

    p {
      color: color.adjust($secondary-color, $lightness: -15%);
      font-size: 1rem;
      line-height: 1.6;
    }

    transition: transform 0.3s ease, box-shadow 0.3s ease;

    &:hover {
      transform: scale(1.03);
      box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
    }
  }
}
